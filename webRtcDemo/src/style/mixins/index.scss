@use "sass:math";

$ratio: math.div(750, 320);
$baseFontSizeVal: 14;

@function r($px, $isFixed:true) {
  @if $px != 0 {
    @return math.div(if($isFixed, math.div($px, $ratio) + 0.01, math.div($px, $ratio)), $baseFontSizeVal) * 1rem;
  }
  @else {
    @return 0;
  }
}

// clearfix
// 闭合子元素的浮动
@mixin clearfix ($extend:true) {
  @if $extend {
    @extend %clearfix;
  }
  @else {
    &:before,
    &:after {
      content: "";
      display: table;
    }

    &:after {
      clear: both;
    }
  }
}

@mixin onepx($positions: top right bottom left, $border-color: #ddd, $border-radius: 0) {
  &:after {
    content: '';
    pointer-events: none;
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    border-width: 0;
    border-radius: $border-radius;
    @each $position in $positions {
      border-#{$position}: 1px solid $border-color;
    }

    @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
      width: 200%;
      height: 200%;
      transform: scale(0.5);
      transform-origin: 0 0;
      border-radius: $border-radius * 2;
    }
  }
}

// 箭头
//-----------------------------------------------------
// $direction 方向
// $width 大小
// $color 颜色
@mixin arrow($direction : bottom, $width : 6px, $color: #d5d9da) {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
  border-color: rgba(255, 255, 255, 0);
  border-style: solid;
  overflow: hidden;

  @if $direction == top {
    border-width: 0 $width $width;
  }
  @else if $direction == left {
    border-width: $width $width $width 0;
  }
  @else if $direction == right {
    border-width: $width 0 $width $width;
  }
  @else {
    border-width: $width $width 0;
  }
  @if $direction == top {
    border-bottom-color: $color;
  }
  @else if $direction == left {
    border-right-color: $color;
  }
  @else if $direction == right {
    border-left-color: $color;
  }
  @else {
    border-top-color: $color;
  }
}

// adapt iphone x
@mixin safeIphoneX ($padding: true, $height: 0) {
  @if $padding {
    @if $height != 0 {
      height: calc(#{$height} + constant(safe-area-inset-bottom));
      height: calc(#{$height} + env(safe-area-inset-bottom));
    }

    padding-bottom: constant(safe-area-inset-bottom);
    padding-bottom: env(safe-area-inset-bottom);
  }
  @else {
    margin-bottom: constant(safe-area-inset-bottom);
    margin-bottom: env(safe-area-inset-bottom);
  }
}
